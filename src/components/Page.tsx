import React from "react";
import Head from "next/head";
import routes from "@/routes";
import styles from "@/styles/components/page.module.scss";
import { useRouter } from "next/router";
import { getSession } from "next-auth/react";
import { AnimatePresence, motion } from "framer-motion";
import Link from "next/link";

interface PageProps {
  children: React.ReactNode;
  transition?: "enter" | "exit";
}

const pageTransitionVariants = {
  initial: { opacity: 0 },
  animate: { opacity: 1 },
  exit: { opacity: 0 },
};

export default function Page({ children }: PageProps) {
  const router = useRouter();
  const { pathname } = router;

  const isLogin = pathname === "/login";
  const isHome = pathname === "/";

  if (isLogin) {
    return <main className={styles.page}>{children}</main>;
  }

  return (
    <>
      <Head>
        <title>Blendify | {routes[pathname] || ""}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.page}>
        <AnimatePresence mode="wait">
          <motion.div
            className={"page-container"}
            key={router.route}
            variants={pageTransitionVariants}
            initial="initial"
            animate="animate"
            exit="exit"
            transition={{ duration: 0.5, ease: "easeInOut" }}
            layoutRoot
          >
            {!isHome && (
              <Link href="/" className={styles.backLink}>
                ï¹¤ back
              </Link>
            )}
            {children}
          </motion.div>
        </AnimatePresence>
      </main>
    </>
  );
}

export async function getServerSideProps() {
  const session = await getSession();

  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: true,
      },
    };
  }

  return {
    props: {
      session,
    },
  };
}
